/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp LyricsServiceServer.xml -i DBusServiceAdaptor.h -a DBuseServiceAdaptor
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "DBuseServiceAdaptor.h"

#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ServiceAdaptor
 */

ServiceAdaptor::ServiceAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ServiceAdaptor::~ServiceAdaptor()
{
    // destructor
}

QString ServiceAdaptor::currentLyric() const
{
    // get the value of property currentLyric
    return qvariant_cast< QString >(parent()->property("currentLyric"));
}

QString ServiceAdaptor::currentTranslatedLyric() const
{
    // get the value of property currentTranslatedLyric
    return qvariant_cast< QString >(parent()->property("currentTranslatedLyric"));
}

bool ServiceAdaptor::hasTranslation() const
{
    // get the value of property hasTranslation
    return qvariant_cast< bool >(parent()->property("hasTranslation"));
}

short ServiceAdaptor::index() const
{
    // get the value of property index
    return qvariant_cast< short >(parent()->property("index"));
}

QStringList ServiceAdaptor::lyrics() const
{
    // get the value of property lyrics
    return qvariant_cast< QStringList >(parent()->property("lyrics"));
}

QStringList ServiceAdaptor::translatedLyrics() const
{
    // get the value of property translatedLyrics
    return qvariant_cast< QStringList >(parent()->property("translatedLyrics"));
}

void ServiceAdaptor::quit()
{
    // handle method call org.lyrics.service.quit
    QMetaObject::invokeMethod(parent(), "quit");
}

